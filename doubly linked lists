#include <iostream>

using namespace std;

class Node{
    public:
    int value;
    Node* next;
    Node* prev;

};

void printForward(Node*head){
    Node* traverser = head;
    while(traverser != nullptr){
        cout<< traverser->value <<endl;
        traverser = traverser->next;
    }
}

void printBackwards(Node*tail){
    Node* traverser = tail;
    while(traverser != nullptr){
        cout<< traverser->value <<endl;
        traverser = traverser->prev;
    }
}

int main(){
    Node* head;
    Node* tail;
//make a single node
    Node* node= new Node();
    node->value = 4;
    node->next = nullptr;
    node->prev = nullptr;
    head=node;
    tail=node;

//making another node
    node = new Node();
    node->value = 5;
    node->next = nullptr;
    node->prev = tail;
    tail->next = node;
    tail = node;

//make one more node aha
    node = new Node();
    node->value = 6;
    node->next = nullptr;
    node->prev = tail;
    tail->next = node;
    tail = node;

cout << "printing forward: " << endl;
printForward(head);

cout << "printing backwards: " << endl;
printBackwards(tail);

}
