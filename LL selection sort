#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;

    Node(int val) : data(val), next(nullptr) {}
};

class LinkedList {
public:
    Node* head;

    LinkedList() : head(nullptr) {}

    void append(int value) {
        Node* newNode = new Node(value);
        if (!head) {
            head = newNode;
            return;
        }
        Node* temp = head;
        while (temp->next) {
            temp = temp->next;
        }
        temp->next = newNode;
    }

    void selectionSort() {
        if (!head || !head->next) return; 

        Node* current = head;

        while (current) {
            Node* minNode = current;
            Node* temp = current->next;

            while (temp) {
                if (temp->data < minNode->data) {
                    minNode = temp;
                }
                temp = temp->next;
            }

            swap(current->data, minNode->data);

            current = current->next;
        }
    }

    void printList() const {
        Node* temp = head;
        while (temp) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    LinkedList list;

    list.append(6);
    list.append(4);
    list.append(2);
    list.append(2);
    list.append(242);
    list.append(1122);
    list.append(0);

    cout << "Original Linked List: ";
    list.printList();

    list.selectionSort();

    cout << "Sorted Linked List: ";
    list.printList();

    return 0;
}
